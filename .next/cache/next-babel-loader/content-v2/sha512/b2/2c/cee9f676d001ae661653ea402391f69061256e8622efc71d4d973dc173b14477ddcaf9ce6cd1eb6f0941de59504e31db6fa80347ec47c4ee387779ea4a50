{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"inline\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      \"& > *\": {\n        margin: theme.spacing(1)\n      }\n    }\n  };\n});\nexport default function Pagin(_ref) {\n  var pageCount = _ref.pageCount,\n      pageIndex = _ref.pageIndex,\n      setPageIndex = _ref.setPageIndex;\n  var classes = useStyles();\n  var pagination = [];\n  var pageCountSet = [];\n\n  for (var i = 1; i <= pageCount; i++) {\n    pageCountSet.push(i);\n  }\n\n  var finalIndexes = [];\n\n  switch (pageCount > 5) {\n    case true:\n      switch (pageIndex) {\n        case 0:\n          //if on first page, show from 1-4 and then last page number\n          if (pageIndex === 0) {\n            finalIndexes = pageCountSet.slice(pageIndex, pageIndex + 3);\n            finalIndexes.push(pageCount);\n            finalIndexes.splice(finalIndexes.length - 1, 0, \"...\");\n          }\n\n          break;\n\n        case 1:\n          //if on page 1, show from 1-4 and then last page number\n          if (pageIndex === 1) {\n            finalIndexes = pageCountSet.slice(pageIndex - 1, pageIndex + 3);\n            finalIndexes.push(pageCount);\n            finalIndexes.splice(finalIndexes.length - 1, 0, \"...\");\n          }\n\n          break;\n        //if on last page, show first page and last 4 page numbers\n\n        case pageCountSet[pageCountSet.length - 1]:\n          if (pageIndex === pageCountSet[pageCountSet.length - 1]) {\n            finalIndexes = pageCountSet.slice(pageIndex - 4, pageIndex);\n            finalIndexes.unshift(1);\n            finalIndexes.splice(1, 0, \"...\");\n          }\n\n          break;\n        //if on second page, show from 2-5 and last page number\n\n        case pageCountSet[1]:\n          if (pageIndex === pageCountSet[1]) {\n            finalIndexes = pageCountSet.slice(0, pageIndex + 2);\n            finalIndexes.push(pageCount);\n            finalIndexes.splice(finalIndexes.length - 1, 0, \"...\");\n          }\n\n          break;\n        //if on last but one page, show last 5 page numbers\n\n        case pageCountSet[pageCountSet.length - 2]:\n          if (pageIndex === pageCountSet[pageCountSet.length - 2]) {\n            finalIndexes = pageCountSet.slice(pageIndex - 3, pageIndex + 1);\n            finalIndexes.unshift(1);\n            finalIndexes.splice(1, 0, \"...\");\n          }\n\n          break;\n\n        default:\n          //if numbers in between, show one on each side as well as first and last page numbers\n          finalIndexes = pageCountSet.slice(pageIndex - 2, pageIndex + 1);\n          finalIndexes.unshift(1);\n          finalIndexes.push(pageCount);\n          finalIndexes.splice(finalIndexes.length - 1, 0, \"...\");\n          finalIndexes.splice(1, 0, \"...\");\n          break;\n      }\n\n      break;\n\n    default:\n      var _loop = function _loop(_i) {\n        pagination.push( /*#__PURE__*/_jsx(_Fragment, {\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: classes.root,\n            children: /*#__PURE__*/_jsx(ButtonGroup, {\n              \"aria-label\": \"outlined primary button group\",\n              children: /*#__PURE__*/_jsx(Button, {\n                color: \"\".concat(pageIndex === _i ? \"secondary\" : \"\"),\n                onClick: function onClick() {\n                  return setPageIndex(_i);\n                },\n                children: _i\n              })\n            })\n          }, _i)\n        }));\n      };\n\n      for (var _i = 0; _i <= pageCount; _i++) {\n        _loop(_i);\n      }\n\n      break;\n  }\n\n  finalIndexes.map(function (index) {\n    pagination.push( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [index !== \"...\" && /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsx(ButtonGroup, {\n            \"aria-label\": \"outlined primary button group\",\n            children: /*#__PURE__*/_jsx(Button, {\n              color: \"\".concat(pageIndex === index ? \"secondary\" : \"\"),\n              onClick: function onClick() {\n                return setPageIndex(index);\n              },\n              children: index\n            })\n          })\n        }, index)\n      }), index === \"...\" && /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsx(Button, {\n          children: \"...\"\n        })\n      })]\n    }));\n  });\n  return /*#__PURE__*/_jsx(\"ul\", {\n    className: \"pagination\",\n    children: pagination\n  });\n}","map":null,"metadata":{},"sourceType":"module"}