{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mac/codespace/flowerghana/components/utils/pagination.js\";\nimport React from \"react\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"inline\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport default function Pagin({\n  pageCount,\n  pageIndex,\n  setPageIndex\n}) {\n  const classes = useStyles();\n  let pagination = [];\n  let pageCountSet = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    pageCountSet.push(i);\n  }\n\n  let finalIndexes = [];\n\n  switch (pageCount > 5) {\n    case true:\n      switch (pageIndex) {\n        case 0:\n          //if on first page, show from 1-4 and then last page number\n          if (pageIndex === 0) {\n            finalIndexes = pageCountSet.slice(pageIndex, pageIndex + 3);\n            finalIndexes.push(pageCount);\n            finalIndexes.splice(finalIndexes.length - 1, 0, \"...\");\n          }\n\n          break;\n\n        case 1:\n          //if on page 1, show from 1-4 and then last page number\n          if (pageIndex === 1) {\n            finalIndexes = pageCountSet.slice(pageIndex - 1, pageIndex + 3);\n            finalIndexes.push(pageCount);\n            finalIndexes.splice(finalIndexes.length - 1, 0, \"...\");\n          }\n\n          break;\n        //if on last page, show first page and last 4 page numbers\n\n        case pageCountSet[pageCountSet.length - 1]:\n          if (pageIndex === pageCountSet[pageCountSet.length - 1]) {\n            finalIndexes = pageCountSet.slice(pageIndex - 4, pageIndex);\n            finalIndexes.unshift(1);\n            finalIndexes.splice(1, 0, \"...\");\n          }\n\n          break;\n        //if on second page, show from 2-5 and last page number\n\n        case pageCountSet[1]:\n          if (pageIndex === pageCountSet[1]) {\n            finalIndexes = pageCountSet.slice(0, pageIndex + 2);\n            finalIndexes.push(pageCount);\n            finalIndexes.splice(finalIndexes.length - 1, 0, \"...\");\n          }\n\n          break;\n        //if on last but one page, show last 5 page numbers\n\n        case pageCountSet[pageCountSet.length - 2]:\n          if (pageIndex === pageCountSet[pageCountSet.length - 2]) {\n            finalIndexes = pageCountSet.slice(pageIndex - 3, pageIndex + 1);\n            finalIndexes.unshift(1);\n            finalIndexes.splice(1, 0, \"...\");\n          }\n\n          break;\n\n        default:\n          //if numbers in between, show one on each side as well as first and last page numbers\n          finalIndexes = pageCountSet.slice(pageIndex - 2, pageIndex + 1);\n          finalIndexes.unshift(1);\n          finalIndexes.push(pageCount);\n          finalIndexes.splice(finalIndexes.length - 1, 0, \"...\");\n          finalIndexes.splice(1, 0, \"...\");\n          break;\n      }\n\n      break;\n\n    default:\n      for (let i = 0; i <= pageCount; i++) {\n        pagination.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.root,\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              \"aria-label\": \"outlined primary button group\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: `${pageIndex === i ? \"secondary\" : \"\"}`,\n                onClick: () => setPageIndex(i),\n                children: i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false));\n      }\n\n      break;\n  }\n\n  finalIndexes.map(index => {\n    pagination.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [index !== \"...\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            \"aria-label\": \"outlined primary button group\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: `${pageIndex === index ? \"secondary\" : \"\"}`,\n              onClick: () => setPageIndex(index),\n              children: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), index === \"...\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true));\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"pagination\",\n    children: pagination\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["/Users/mac/codespace/flowerghana/components/utils/pagination.js"],"names":["React","ButtonGroup","Button","makeStyles","useStyles","theme","root","display","flexDirection","alignItems","margin","spacing","Pagin","pageCount","pageIndex","setPageIndex","classes","pagination","pageCountSet","i","push","finalIndexes","slice","splice","length","unshift","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,QADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJ,aAAS;AACPC,MAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AADD;AAJL;AADiC,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAf,EAAuD;AACpE,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,MAAIa,UAAU,GAAG,EAAjB;AAEA,MAAIC,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,SAArB,EAAgCM,CAAC,EAAjC,EAAqC;AACnCD,IAAAA,YAAY,CAACE,IAAb,CAAkBD,CAAlB;AACD;;AAED,MAAIE,YAAY,GAAG,EAAnB;;AAEA,UAAQR,SAAS,GAAG,CAApB;AACE,SAAK,IAAL;AACE,cAAQC,SAAR;AACE,aAAK,CAAL;AACE;AACA,cAAIA,SAAS,KAAK,CAAlB,EAAqB;AACnBO,YAAAA,YAAY,GAAGH,YAAY,CAACI,KAAb,CAAmBR,SAAnB,EAA8BA,SAAS,GAAG,CAA1C,CAAf;AACAO,YAAAA,YAAY,CAACD,IAAb,CAAkBP,SAAlB;AACAQ,YAAAA,YAAY,CAACE,MAAb,CAAoBF,YAAY,CAACG,MAAb,GAAsB,CAA1C,EAA6C,CAA7C,EAAgD,KAAhD;AACD;;AACD;;AACF,aAAK,CAAL;AACE;AACA,cAAIV,SAAS,KAAK,CAAlB,EAAqB;AACnBO,YAAAA,YAAY,GAAGH,YAAY,CAACI,KAAb,CAAmBR,SAAS,GAAG,CAA/B,EAAkCA,SAAS,GAAG,CAA9C,CAAf;AACAO,YAAAA,YAAY,CAACD,IAAb,CAAkBP,SAAlB;AACAQ,YAAAA,YAAY,CAACE,MAAb,CAAoBF,YAAY,CAACG,MAAb,GAAsB,CAA1C,EAA6C,CAA7C,EAAgD,KAAhD;AACD;;AACD;AAEF;;AACA,aAAKN,YAAY,CAACA,YAAY,CAACM,MAAb,GAAsB,CAAvB,CAAjB;AACE,cAAIV,SAAS,KAAKI,YAAY,CAACA,YAAY,CAACM,MAAb,GAAsB,CAAvB,CAA9B,EAAyD;AACvDH,YAAAA,YAAY,GAAGH,YAAY,CAACI,KAAb,CAAmBR,SAAS,GAAG,CAA/B,EAAkCA,SAAlC,CAAf;AACAO,YAAAA,YAAY,CAACI,OAAb,CAAqB,CAArB;AACAJ,YAAAA,YAAY,CAACE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B;AACD;;AACD;AAEF;;AACA,aAAKL,YAAY,CAAC,CAAD,CAAjB;AACE,cAAIJ,SAAS,KAAKI,YAAY,CAAC,CAAD,CAA9B,EAAmC;AACjCG,YAAAA,YAAY,GAAGH,YAAY,CAACI,KAAb,CAAmB,CAAnB,EAAsBR,SAAS,GAAG,CAAlC,CAAf;AACAO,YAAAA,YAAY,CAACD,IAAb,CAAkBP,SAAlB;AACAQ,YAAAA,YAAY,CAACE,MAAb,CAAoBF,YAAY,CAACG,MAAb,GAAsB,CAA1C,EAA6C,CAA7C,EAAgD,KAAhD;AACD;;AACD;AAEF;;AACA,aAAKN,YAAY,CAACA,YAAY,CAACM,MAAb,GAAsB,CAAvB,CAAjB;AACE,cAAIV,SAAS,KAAKI,YAAY,CAACA,YAAY,CAACM,MAAb,GAAsB,CAAvB,CAA9B,EAAyD;AACvDH,YAAAA,YAAY,GAAGH,YAAY,CAACI,KAAb,CAAmBR,SAAS,GAAG,CAA/B,EAAkCA,SAAS,GAAG,CAA9C,CAAf;AACAO,YAAAA,YAAY,CAACI,OAAb,CAAqB,CAArB;AACAJ,YAAAA,YAAY,CAACE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B;AACD;;AACD;;AAEF;AACE;AACAF,UAAAA,YAAY,GAAGH,YAAY,CAACI,KAAb,CAAmBR,SAAS,GAAG,CAA/B,EAAkCA,SAAS,GAAG,CAA9C,CAAf;AACAO,UAAAA,YAAY,CAACI,OAAb,CAAqB,CAArB;AACAJ,UAAAA,YAAY,CAACD,IAAb,CAAkBP,SAAlB;AACAQ,UAAAA,YAAY,CAACE,MAAb,CAAoBF,YAAY,CAACG,MAAb,GAAsB,CAA1C,EAA6C,CAA7C,EAAgD,KAAhD;AACAH,UAAAA,YAAY,CAACE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B;AAEA;AArDJ;;AAuDA;;AAEF;AACE,WAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,SAArB,EAAgCM,CAAC,EAAjC,EAAqC;AACnCF,QAAAA,UAAU,CAACG,IAAX,eACE;AAAA,iCACE;AAAa,YAAA,SAAS,EAAEJ,OAAO,CAACV,IAAhC;AAAA,mCACE,QAAC,WAAD;AAAa,4BAAW,+BAAxB;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,KAAK,EAAG,GAAEQ,SAAS,KAAKK,CAAd,GAAkB,WAAlB,GAAgC,EAAG,EAD/C;AAEE,gBAAA,OAAO,EAAE,MAAMJ,YAAY,CAACI,CAAD,CAF7B;AAAA,0BAIGA;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,aAAUA,CAAV;AAAA;AAAA;AAAA;AAAA;AADF,yBADF;AAcD;;AACD;AA5EJ;;AA+EAE,EAAAA,YAAY,CAACK,GAAb,CAAkBC,KAAD,IAAW;AAC1BV,IAAAA,UAAU,CAACG,IAAX,eACE;AAAA,iBACGO,KAAK,KAAK,KAAV,iBACC;AAAA,+BACE;AAAiB,UAAA,SAAS,EAAEX,OAAO,CAACV,IAApC;AAAA,iCACE,QAAC,WAAD;AAAa,0BAAW,+BAAxB;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,KAAK,EAAG,GAAEQ,SAAS,KAAKa,KAAd,GAAsB,WAAtB,GAAoC,EAAG,EADnD;AAEE,cAAA,OAAO,EAAE,MAAMZ,YAAY,CAACY,KAAD,CAF7B;AAAA,wBAIGA;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AADF,uBAFJ,EAeGA,KAAK,KAAK,KAAV,iBACC;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBAhBJ;AAAA,oBADF;AAuBD,GAxBD;AA0BA,sBAAO;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cAA4BV;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD","sourcesContent":["import React from \"react\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"inline\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function Pagin({ pageCount, pageIndex, setPageIndex }) {\n  const classes = useStyles();\n  let pagination = [];\n\n  let pageCountSet = [];\n  for (let i = 1; i <= pageCount; i++) {\n    pageCountSet.push(i);\n  }\n\n  let finalIndexes = [];\n\n  switch (pageCount > 5) {\n    case true:\n      switch (pageIndex) {\n        case 0:\n          //if on first page, show from 1-4 and then last page number\n          if (pageIndex === 0) {\n            finalIndexes = pageCountSet.slice(pageIndex, pageIndex + 3);\n            finalIndexes.push(pageCount);\n            finalIndexes.splice(finalIndexes.length - 1, 0, \"...\");\n          }\n          break;\n        case 1:\n          //if on page 1, show from 1-4 and then last page number\n          if (pageIndex === 1) {\n            finalIndexes = pageCountSet.slice(pageIndex - 1, pageIndex + 3);\n            finalIndexes.push(pageCount);\n            finalIndexes.splice(finalIndexes.length - 1, 0, \"...\");\n          }\n          break;\n\n        //if on last page, show first page and last 4 page numbers\n        case pageCountSet[pageCountSet.length - 1]:\n          if (pageIndex === pageCountSet[pageCountSet.length - 1]) {\n            finalIndexes = pageCountSet.slice(pageIndex - 4, pageIndex);\n            finalIndexes.unshift(1);\n            finalIndexes.splice(1, 0, \"...\");\n          }\n          break;\n\n        //if on second page, show from 2-5 and last page number\n        case pageCountSet[1]:\n          if (pageIndex === pageCountSet[1]) {\n            finalIndexes = pageCountSet.slice(0, pageIndex + 2);\n            finalIndexes.push(pageCount);\n            finalIndexes.splice(finalIndexes.length - 1, 0, \"...\");\n          }\n          break;\n\n        //if on last but one page, show last 5 page numbers\n        case pageCountSet[pageCountSet.length - 2]:\n          if (pageIndex === pageCountSet[pageCountSet.length - 2]) {\n            finalIndexes = pageCountSet.slice(pageIndex - 3, pageIndex + 1);\n            finalIndexes.unshift(1);\n            finalIndexes.splice(1, 0, \"...\");\n          }\n          break;\n\n        default:\n          //if numbers in between, show one on each side as well as first and last page numbers\n          finalIndexes = pageCountSet.slice(pageIndex - 2, pageIndex + 1);\n          finalIndexes.unshift(1);\n          finalIndexes.push(pageCount);\n          finalIndexes.splice(finalIndexes.length - 1, 0, \"...\");\n          finalIndexes.splice(1, 0, \"...\");\n\n          break;\n      }\n      break;\n\n    default:\n      for (let i = 0; i <= pageCount; i++) {\n        pagination.push(\n          <>\n            <div key={i} className={classes.root}>\n              <ButtonGroup aria-label=\"outlined primary button group\">\n                <Button\n                  color={`${pageIndex === i ? \"secondary\" : \"\"}`}\n                  onClick={() => setPageIndex(i)}\n                >\n                  {i}\n                </Button>\n              </ButtonGroup>\n            </div>\n          </>\n        );\n      }\n      break;\n  }\n\n  finalIndexes.map((index) => {\n    pagination.push(\n      <>\n        {index !== \"...\" && (\n          <>\n            <div key={index} className={classes.root}>\n              <ButtonGroup aria-label=\"outlined primary button group\">\n                <Button\n                  color={`${pageIndex === index ? \"secondary\" : \"\"}`}\n                  onClick={() => setPageIndex(index)}\n                >\n                  {index}\n                </Button>\n              </ButtonGroup>\n            </div>\n          </>\n        )}\n        {index === \"...\" && (\n          <>\n            <Button>...</Button>\n          </>\n        )}\n      </>\n    );\n  });\n\n  return <ul className=\"pagination\">{pagination}</ul>;\n}\n"]},"metadata":{},"sourceType":"module"}