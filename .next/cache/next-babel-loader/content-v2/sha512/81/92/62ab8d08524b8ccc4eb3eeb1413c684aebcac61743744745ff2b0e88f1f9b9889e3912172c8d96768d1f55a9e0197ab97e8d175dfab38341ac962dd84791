{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Formik, Field, Form } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { stepsStore, activeStepStore, senderStore } from \"./store\";\nimport * as yup from \"yup\";\nimport \"yup-phone\";\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\nexport default function SenderForm() {\n  const classes = useStyles();\n  const activeStep = activeStepStore(state => state.activeStep);\n  const setActiveStep = activeStepStore(state => state.setActiveStep);\n  const steps = stepsStore(state => state.steps);\n  const sender = senderStore(state => state.sender);\n  const setSender = senderStore(state => state.setSender);\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const CustomFirstName = props => /*#__PURE__*/_jsx(TextField, _objectSpread({\n    required: true,\n    id: \"sfirstName\",\n    label: \"First name\",\n    fullWidth: true,\n    autoComplete: \"given-name\"\n  }, props));\n\n  const CustomNote = props => /*#__PURE__*/_jsx(TextField, _objectSpread({\n    id: \"note\",\n    label: \"Add a note\",\n    multiline: true,\n    fullWidth: true,\n    autoComplete: \"add a note\"\n  }, props));\n\n  const CustomInstructions = props => /*#__PURE__*/_jsx(TextField, _objectSpread({\n    id: \"instruction\",\n    label: \"Add instructions\",\n    multiline: true,\n    fullWidth: true,\n    autoComplete: \"Add instructions\"\n  }, props));\n\n  const CustomPhone = props => /*#__PURE__*/_jsx(TextField, _objectSpread({\n    required: true,\n    id: \"sphone\",\n    label: \"Phone number\",\n    fullWidth: true,\n    autoComplete: \"phone number\",\n    type: \"tel\"\n  }, props));\n\n  const CustomEmail = props => /*#__PURE__*/_jsx(TextField, _objectSpread({\n    required: true,\n    id: \"email\",\n    label: \"Email address\",\n    fullWidth: true,\n    autoComplete: \"email address\",\n    type: \"email\"\n  }, props));\n\n  const phoneRegExp = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n  const SenderSchema = yup.object().shape({\n    sfirstname: yup.string().min(2, \"First name should be of minimum 2 characters length\").max(40, \"First name should be of maximum 40 characters length\").required(\"First name is required\"),\n    note: yup.string().min(10, \"Note should be of minimum 10 characters length\").max(280, \"Note should be of maximum 280 characters length\"),\n    instructions: yup.string().min(10, \"Instructions should be of minimum 10 characters length\").max(280, \"Instructions should be of maximum 280 characters length\"),\n    sphone: yup.string().matches(phoneRegExp, \"Phone number is not valid\"),\n    email: yup.string().email(\"Enter a valid email\")\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Sender Information\"\n    }), /*#__PURE__*/_jsx(Formik, {\n      initialValues: sender,\n      validationSchema: SenderSchema,\n      onSubmit: async values => {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        setSender(values);\n        handleNext();\n      },\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxs(Form, {\n        children: [/*#__PURE__*/_jsxs(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxs(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: [/*#__PURE__*/_jsx(Field, {\n              name: \"email\",\n              as: CustomEmail\n            }), /*#__PURE__*/_jsx(\"br\", {}), errors.email && touched.email ? errors.email : null]\n          }), /*#__PURE__*/_jsxs(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsx(Field, {\n              name: \"sfirstname\",\n              as: CustomFirstName\n            }), errors.sfirstname && touched.sfirstname ? errors.firstname : null]\n          }), /*#__PURE__*/_jsxs(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsx(Field, {\n              name: \"sphone\",\n              as: CustomPhone\n            }), errors.sphone && touched.sphone ? errors.sphone : null]\n          }), /*#__PURE__*/_jsxs(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsx(Field, {\n              name: \"note\",\n              as: CustomNote\n            }), errors.note && touched.note ? errors.note : null]\n          }), /*#__PURE__*/_jsxs(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsx(Field, {\n              name: \"instructions\",\n              as: CustomInstructions\n            }), errors.instructions && touched.instructions ? errors.instructions : null]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: classes.buttons,\n          children: [activeStep !== 0 && /*#__PURE__*/_jsx(Button, {\n            onClick: handleBack,\n            className: classes.button,\n            children: \"Back\"\n          }), /*#__PURE__*/_jsx(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            type: \"submit\",\n            children: activeStep === steps.length - 1 ? \"Proceed to payment\" : \"Next\"\n          })]\n        })]\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}