{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/mac/codespace/flowerghana/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/codespace/flowerghana/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/mac/codespace/flowerghana/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport * as yup from \"yup\";\nimport { useRouter } from \"next/router\";\nimport localforage from \"localforage\";\nimport { stateStore, removeStore } from \"./store\";\nexport default function AddToCartComponent(_ref) {\n  var itemTitle = _ref.itemTitle,\n      itemPrice = _ref.itemPrice;\n  var setDone = stateStore(function (state) {\n    return state.setDone;\n  });\n  var done = stateStore(function (state) {\n    return state.done;\n  });\n  var remove = removeStore(function (state) {\n    return state.done;\n  });\n\n  var _useState = useState(null),\n      success = _useState[0],\n      setSuccess = _useState[1];\n\n  var _useState2 = useState(false),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var router = useRouter();\n  var path = router.asPath;\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var Quantity = function Quantity(props) {\n    return /*#__PURE__*/_jsx(TextField, _objectSpread({\n      margin: \"dense\",\n      label: \"Quantity\",\n      type: \"number\",\n      variant: \"outlined\",\n      fullWidth: true\n    }, props));\n  };\n\n  var QuantitySchema = yup.object().shape({\n    quantity: yup.number().min(1, \"Minimum quantity is 1\").max(1000, \"Maximum quantity is 1000\").required(\"Quantity is required\")\n  });\n\n  var FetchSuccess = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var value;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 500);\n              });\n\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return localforage.getItem(itemTitle).then(function (value) {\n                setSuccess(value);\n              });\n\n            case 5:\n              value = _context.sent;\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8]]);\n    }));\n\n    return function FetchSuccess(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    FetchSuccess();\n  }, [done, remove]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [success === null ? /*#__PURE__*/_jsx(\"sl-button\", {\n      \"class\": \"add\",\n      type: path.includes(\"/bouquet/\") ? \"success\" : null,\n      onClick: handleClickOpen,\n      children: \"Add to cart\"\n    }) : /*#__PURE__*/_jsx(\"sl-button\", {\n      \"class\": \"add\",\n      disabled: true,\n      children: \"Item added\"\n    }), /*#__PURE__*/_jsxs(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsx(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: itemTitle\n      }), /*#__PURE__*/_jsxs(DialogContent, {\n        children: [/*#__PURE__*/_jsxs(DialogContentText, {\n          children: [\"Please choose the quantity of \", itemTitle, \" you want for your purchase today.\"]\n        }), /*#__PURE__*/_jsx(Formik, {\n          validationSchema: QuantitySchema,\n          initialValues: {\n            quantity: 1,\n            title: itemTitle,\n            price: itemPrice\n          },\n          onSubmit: /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n              var netPrice;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return new Promise(function (resolve) {\n                        return setTimeout(resolve, 500);\n                      });\n\n                    case 2:\n                      netPrice = values.price * values.quantity;\n\n                      try {\n                        localforage.setItem(values.title, [values.quantity, netPrice]);\n                        setDone(!done);\n                        handleClose();\n                      } catch (err) {\n                        console.log(err);\n                      }\n\n                    case 4:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            return function (_x2) {\n              return _ref3.apply(this, arguments);\n            };\n          }(),\n          children: function children(_ref4) {\n            var errors = _ref4.errors,\n                touched = _ref4.touched;\n            return /*#__PURE__*/_jsxs(Form, {\n              children: [/*#__PURE__*/_jsx(Field, {\n                name: \"quantity\",\n                as: Quantity\n              }), errors.quantity && touched.quantity ? errors.quantity : null, /*#__PURE__*/_jsxs(DialogActions, {\n                children: [/*#__PURE__*/_jsx(Button, {\n                  onClick: handleClose,\n                  children: \"Cancel\"\n                }), /*#__PURE__*/_jsx(Button, {\n                  type: \"submit\",\n                  color: \"secondary\",\n                  children: \"Add to cart\"\n                })]\n              })]\n            });\n          }\n        })]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}