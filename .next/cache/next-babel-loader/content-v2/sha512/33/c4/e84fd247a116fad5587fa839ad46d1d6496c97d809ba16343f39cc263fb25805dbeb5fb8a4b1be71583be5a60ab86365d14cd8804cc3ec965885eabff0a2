{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Badge from \"@material-ui/core/Badge\";\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\nimport React, { useEffect, useState } from \"react\";\nimport localforage from \"localforage\";\nimport { stateStore, removeStore, cartIconStore } from \"./store\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\nimport { Link } from \"@material-ui/core\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport SimpleSnackbar from \"./snackbar\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500\n  }\n});\nexport default function ShoppingCartComponent() {\n  const classes = useStyles();\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const done = stateStore(state => state.done);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const remove = removeStore(state => state.done);\n  const setRemove = removeStore(state => state.setDone);\n  const open = cartIconStore(state => state.open);\n  const setOpen = cartIconStore(state => state.setOpen);\n\n  const FetchCount = async values => {\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    try {\n      const value = await localforage.length().then(function (numberOfKeys) {\n        setCount(numberOfKeys);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    FetchCount();\n  }, [done, remove]);\n\n  const ClearCart = async values => {\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    try {\n      localforage.clear().then(function () {\n        console.log(\"Database is now empty.\");\n        location.reload(\"/\");\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const RemoveItem = async title => {\n    try {\n      localforage.removeItem(title);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    RemoveItem(remove);\n  }, [remove]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = async values => {\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    try {\n      const data = [];\n      await localforage.iterate(function (value, key, iterationNumber) {\n        data.push(_objectSpread({\n          key\n        }, value));\n      });\n      setData(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    FetchData();\n  }, [done, remove]);\n\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n  let prices = [0, 0];\n  data === null || data === void 0 ? void 0 : data.map(x => {\n    prices.push(x[1]);\n  });\n  let totalPrice = prices === null || prices === void 0 ? void 0 : prices.reduce(reducer);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Badge, {\n      badgeContent: count,\n      onClick: handleClickOpen,\n      color: \"secondary\",\n      children: /*#__PURE__*/_jsx(ShoppingCartOutlinedIcon, {})\n    }), /*#__PURE__*/_jsxs(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [remove !== \"\" && /*#__PURE__*/_jsx(SimpleSnackbar, {\n        message: \"Item removed from cart\"\n      }), /*#__PURE__*/_jsx(DialogContent, {\n        children: data.length < 1 ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(Typography, {\n            children: \"Shopping cart is empty.\"\n          }), /*#__PURE__*/_jsxs(DialogActions, {\n            children: [/*#__PURE__*/_jsx(Button, {\n              color: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }), /*#__PURE__*/_jsx(Link, {\n              href: \"/category/popular\",\n              children: /*#__PURE__*/_jsx(Button, {\n                color: \"primary\",\n                children: \"Start shopping\"\n              })\n            })]\n          })]\n        }) : /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(DialogTitle, {\n            id: \"form-dialog-title\",\n            children: \"Shopping Cart\"\n          }), /*#__PURE__*/_jsx(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxs(Table, {\n              className: classes.table,\n              \"aria-label\": \"customized table\",\n              children: [/*#__PURE__*/_jsx(TableHead, {\n                children: /*#__PURE__*/_jsxs(TableRow, {\n                  children: [/*#__PURE__*/_jsx(StyledTableCell, {\n                    children: \"Name\"\n                  }), /*#__PURE__*/_jsx(StyledTableCell, {\n                    children: \"Quantity\"\n                  }), /*#__PURE__*/_jsx(StyledTableCell, {\n                    children: \"Price\\xA0(\\u20B5)\"\n                  }), /*#__PURE__*/_jsx(StyledTableCell, {\n                    children: \"Remove\"\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(TableBody, {\n                children: data.map((row, i) => /*#__PURE__*/_jsxs(StyledTableRow, {\n                  children: [/*#__PURE__*/_jsx(StyledTableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: row.key\n                  }), /*#__PURE__*/_jsx(StyledTableCell, {\n                    children: row[0]\n                  }), /*#__PURE__*/_jsx(StyledTableCell, {\n                    children: row[1]\n                  }), /*#__PURE__*/_jsx(StyledTableCell, {\n                    children: /*#__PURE__*/_jsx(HighlightOffIcon, {\n                      onClick: () => setRemove(row.key)\n                    })\n                  })]\n                }, i))\n              })]\n            })\n          }), /*#__PURE__*/_jsxs(Typography, {\n            style: {\n              margin: 20\n            },\n            variant: \"h6\",\n            children: [\"Total: \\u20B5\", totalPrice]\n          }), /*#__PURE__*/_jsxs(DialogActions, {\n            children: [/*#__PURE__*/_jsx(Button, {\n              onClick: handleClose,\n              children: \"Close\"\n            }), /*#__PURE__*/_jsx(Button, {\n              onClick: ClearCart,\n              children: \"Clear Cart\"\n            }), /*#__PURE__*/_jsx(Link, {\n              href: \"/checkout\",\n              children: /*#__PURE__*/_jsx(Button, {\n                color: \"secondary\",\n                children: \"Checkout\"\n              })\n            })]\n          })]\n        })\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}