{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/* eslint-disable no-use-before-define */\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { DataStore } from \"aws-amplify\";\nimport { Bouquets } from \"../../media/models\";\nimport Link from \"next/link\";\nimport Fuse from \"fuse.js\";\nimport { useRouter } from \"next/router\";\nimport Head from \"next/head\";\nimport { Typography } from \"@material-ui/core\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport AddToCartComponent from \"../../cart/addToCart\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\nimport { CardContent } from \"@material-ui/core\";\nimport { Chip } from \"@material-ui/core\";\nexport default function SearchComponent() {\n  const router = useRouter();\n  let slug = router.query.slug;\n  const {\n    0: bouquets,\n    1: setBouquets\n  } = useState([]);\n  const {\n    0: searchParam,\n    1: setSearchParam\n  } = useState(\"\");\n  const options = [\"cheapest\", \"biggest\", \"love\", \"romance\", \"grand\", \"roses\", \"chrysanthemums\"];\n  useEffect(() => {\n    fetchPosts();\n\n    async function fetchPosts() {\n      const bouquetsData = await DataStore.query(Bouquets);\n      setBouquets(bouquetsData);\n    }\n\n    const subscription = DataStore.observe(Bouquets).subscribe(() => fetchPosts());\n    return () => subscription.unsubscribe();\n  }, []);\n  const option = {\n    includeScore: true,\n    keys: [\"title\", \"tags\", \"category\", \"description\", \"amount\"]\n  };\n  const toString = JSON.stringify(bouquets);\n  const toJson = JSON.parse(toString);\n  const fuse = new Fuse(toJson, option);\n  let result;\n\n  if (slug !== \"random\" || slug != undefined) {\n    if (searchParam === \"\") {\n      result = fuse.search(slug);\n    } else {\n      result = fuse.search(searchParam);\n    }\n  } else {\n    result = fuse.search(searchParam);\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: slug !== undefined && searchParam === \"\" ? /*#__PURE__*/_jsxs(\"title\", {\n        children: [\" \", `Search '${slug}'`, \"| FlowersGhana\"]\n      }) : /*#__PURE__*/_jsxs(\"title\", {\n        children: [`Search '${searchParam}'`, \" | FlowersGhana\"]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        margin: 20\n      },\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        spacing: 0,\n        direction: \"column\",\n        alignItems: \"center\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxs(Grid, {\n          children: [/*#__PURE__*/_jsx(TextField, {\n            margin: \"dense\",\n            multiline: true,\n            id: \"review\",\n            label: \"Search by keyword(s)\",\n            type: \"text\",\n            variant: \"outlined\",\n            onChange: e => setSearchParam(e.target.value),\n            value: searchParam,\n            fullWidth: true\n          }), /*#__PURE__*/_jsx(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: \"Find an item by searching title, description, amount less than, or category.\"\n          })]\n        }), /*#__PURE__*/_jsx(Grid, {\n          style: {\n            margin: 20\n          },\n          children: options.map((option, i) => {\n            return /*#__PURE__*/_jsx(\"sl-badge\", {\n              class: \"search\",\n              onClick: () => setSearchParam(option),\n              type: \"info\",\n              children: option\n            }, i);\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          style: {\n            margin: 20\n          },\n          children: result.length < 1 && /*#__PURE__*/_jsx(_Fragment, {\n            children: /*#__PURE__*/_jsxs(\"sl-alert\", {\n              type: \"danger\",\n              open: true,\n              children: [/*#__PURE__*/_jsx(\"sl-icon\", {\n                slot: \"icon\",\n                name: \"exclamation-octagon\"\n              }), /*#__PURE__*/_jsx(\"strong\", {\n                children: \"Please try another keyword(s)\"\n              }), /*#__PURE__*/_jsx(\"br\", {}), \"No items found.\"]\n            })\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          container: true,\n          item: true,\n          spacing: 3,\n          children: result.map((item, i) => {\n            return /*#__PURE__*/_jsxs(Grid, {\n              item: true,\n              xs: 6,\n              md: 4,\n              children: [/*#__PURE__*/_jsx(Link, {\n                href: `/bouquet/${item.item.slug}`,\n                children: /*#__PURE__*/_jsx(CardHeader, {\n                  title: item.item.title,\n                  avatar: /*#__PURE__*/_jsx(Chip, {\n                    label: `â‚µ${item.item.amount}`,\n                    color: \"secondary\"\n                  }),\n                  subheader: item.item.availability\n                })\n              }), /*#__PURE__*/_jsxs(CardContent, {\n                children: [/*#__PURE__*/_jsx(Link, {\n                  href: `/bouquet/${item.item.slug}`,\n                  children: /*#__PURE__*/_jsx(LazyLoadImage, {\n                    slot: \"image\",\n                    delayTime: 500,\n                    placeholderSrc: `https://res.cloudinary.com/deyudesls/image/upload/c_scale,q_100,w_200/v1627491504/flowersghana%20logo.webp`,\n                    effect: \"blur\",\n                    src: `https://res.cloudinary.com/deyudesls/image/upload/c_scale,h_516,w_387/${item.item.img}`,\n                    alt: item.item.title,\n                    className: \"lazy\"\n                  })\n                }), /*#__PURE__*/_jsx(AddToCartComponent, {\n                  itemTitle: item.item.title,\n                  itemPrice: item.item.amount\n                })]\n              })]\n            }, i);\n          })\n        })]\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}