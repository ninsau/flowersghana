{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button } from \"@material-ui/core\";\nimport { stepsStore, activeStepStore, recipientStore, senderStore } from \"./store\";\nimport localforage from \"localforage\";\nimport { DataStore } from \"aws-amplify\";\nimport { Checkout, Cart } from \"../../media/models\";\nimport { PaystackButton } from \"react-paystack\";\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    padding: theme.spacing(1, 0)\n  },\n  total: {\n    fontWeight: 700\n  },\n  title: {\n    marginTop: theme.spacing(2)\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\nexport default function Review() {\n  const classes = useStyles();\n  const activeStep = activeStepStore(state => state.activeStep);\n  const setActiveStep = activeStepStore(state => state.setActiveStep);\n  const steps = stepsStore(state => state.steps);\n  const recipient = recipientStore(state => state.recipient);\n  const sender = senderStore(state => state.sender);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const publicKey = \"pk_live_dc752231bfcf577b0e2626cede5bda221f605179\";\n\n  const FetchData = async values => {\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    try {\n      const data = [];\n      await localforage.iterate(function (value, key, iterationNumber) {\n        data.push(_objectSpread({\n          key\n        }, value));\n      });\n      setData(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n  let prices = [0, 0];\n  data === null || data === void 0 ? void 0 : data.map(x => {\n    prices.push(x[1]);\n  });\n  let totalPrice = prices === null || prices === void 0 ? void 0 : prices.reduce(reducer);\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const extra = {\n    paymentMade: false,\n    trackOrder: `${recipient.firstname}-${sender.sfirstname}`\n  };\n\n  const mergeOrderDetails = _objectSpread(_objectSpread(_objectSpread({}, recipient), sender), extra);\n\n  const cartDetails = {\n    trackOrder: `${recipient.firstname}-${sender.sfirstname}`,\n    cart: JSON.stringify(data)\n  };\n  const componentProps = {\n    email: sender.email,\n    amount: totalPrice * 100,\n    metadata: {\n      name: sender.sfirstname,\n      phone: sender.sphone\n    },\n    currency: \"Ghs\",\n    publicKey,\n    text: \"Proceed to payment\",\n    onSuccess: () => PlaceOrder()\n  };\n\n  const ClearCart = async values => {\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    try {\n      localforage.clear().then(function () {\n        console.log(\"Database is now empty.\");\n        location.replace(\"/success\");\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const PlaceOrder = async values => {\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    try {\n      await DataStore.save(new Checkout(mergeOrderDetails));\n      await DataStore.save(new Cart(cartDetails));\n      ClearCart();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Order summary\"\n    }), /*#__PURE__*/_jsxs(List, {\n      disablePadding: true,\n      children: [data.map((product, i) => /*#__PURE__*/_jsxs(ListItem, {\n        className: classes.listItem,\n        children: [/*#__PURE__*/_jsx(ListItemText, {\n          primary: product.key,\n          secondary: `Quantity: ${product[0]}`\n        }), /*#__PURE__*/_jsxs(Typography, {\n          variant: \"body2\",\n          children: [\"\\u20B5\", product[1]]\n        })]\n      }, i)), /*#__PURE__*/_jsxs(ListItem, {\n        className: classes.listItem,\n        children: [/*#__PURE__*/_jsx(ListItemText, {\n          primary: \"Delivery\"\n        }), /*#__PURE__*/_jsxs(Typography, {\n          variant: \"body2\",\n          children: [\"\\u20B5\", recipient.fee]\n        })]\n      }), /*#__PURE__*/_jsxs(ListItem, {\n        className: classes.listItem,\n        children: [/*#__PURE__*/_jsx(ListItemText, {\n          primary: \"Total\"\n        }), /*#__PURE__*/_jsxs(Typography, {\n          variant: \"subtitle1\",\n          className: classes.total,\n          children: [\"\\u20B5\", totalPrice + recipient.fee]\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: [/*#__PURE__*/_jsx(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          className: classes.title,\n          children: \"Recipient\"\n        }), /*#__PURE__*/_jsxs(Typography, {\n          gutterBottom: true,\n          children: [recipient.firstname, \" \", recipient.lastname]\n        }), /*#__PURE__*/_jsx(Typography, {\n          gutterBottom: true,\n          children: `${recipient.location} - ${recipient.location2 || recipient.city}`\n        })]\n      }), /*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        container: true,\n        direction: \"column\",\n        xs: 12,\n        sm: 6,\n        children: [/*#__PURE__*/_jsx(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          className: classes.title,\n          children: \"Sender\"\n        }), /*#__PURE__*/_jsx(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxs(Typography, {\n              gutterBottom: true,\n              children: [sender.sfirstname, \" \", sender.email, \" \", sender.sphone]\n            })\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.buttons,\n        children: [activeStep !== 0 && /*#__PURE__*/_jsx(Button, {\n          onClick: handleBack,\n          className: classes.button,\n          children: \"Back\"\n        }), activeStep === steps.length - 1 ? /*#__PURE__*/_jsx(PaystackButton, _objectSpread({\n          className: \"paystack-button\"\n        }, componentProps)) : null]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}