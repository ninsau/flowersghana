{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mac/codespace/flowerghana/calls/fetchReviews.js\";\nimport { DataStore, Predicates, SortDirection } from \"aws-amplify\";\nimport { useState, useEffect } from \"react\";\nimport { Reviews } from \"../media/models\";\nimport { useRouter } from \"next/router\";\nimport Pagin from \"../components/utils/pagination\";\nimport { Grid } from \"@material-ui/core\";\nimport Backdrop from \"../components/loader/backdrop\";\nexport default function FetchReviews() {\n  const router = useRouter();\n  let path = router.asPath;\n  const {\n    0: reviews,\n    1: setReviews\n  } = useState([]);\n  const {\n    0: pageIndex,\n    1: setPageIndex\n  } = useState(0);\n  const {\n    0: returned,\n    1: setReturned\n  } = useState(true);\n  useEffect(() => {\n    fetchPosts();\n\n    async function fetchPosts() {\n      if (path === \"/\") {\n        const reviewsData = await DataStore.query(Reviews, Predicates.ALL, {\n          page: 0,\n          limit: 5\n        }, {\n          sort: s => s.review(SortDirection.ASCENDING)\n        });\n        setReviews(reviewsData);\n      } else {\n        const reviewsData = await DataStore.query(Reviews, Predicates.ALL, {\n          page: pageIndex,\n          limit: 10\n        }, {\n          sort: s => s.review(SortDirection.ASCENDING)\n        });\n\n        if (reviewsData.length < 1) {\n          setReturned(false);\n        } else {\n          setReviews(reviewsData);\n        }\n      }\n    }\n\n    const subscription = DataStore.observe(Reviews).subscribe(() => fetchPosts());\n    return () => subscription.unsubscribe();\n  }, [pageIndex]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [reviews.length < 1 && returned === true && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), reviews.length < 1 && returned === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Custom404Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), path === \"/\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: reviews.map((review, i) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: i === 0 || i === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"sl-details\", {\n              summary: `${review.name}`,\n              open: true,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: review.review\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"sl-details\", {\n              summary: `${review.name}`,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: review.review\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 23\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, void 0, false);\n      })\n    }, void 0, false), path === \"/reviews\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: reviews.map((review, i) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"sl-details\", {\n            summary: `${review.name}`,\n            open: true,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: review.review\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false), path !== \"/\" && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(Pagin, {\n        pageCount: 3,\n        pageIndex: pageIndex,\n        setPageIndex: setPageIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/mac/codespace/flowerghana/calls/fetchReviews.js"],"names":["DataStore","Predicates","SortDirection","useState","useEffect","Reviews","useRouter","Pagin","Grid","Backdrop","FetchReviews","router","path","asPath","reviews","setReviews","pageIndex","setPageIndex","returned","setReturned","fetchPosts","reviewsData","query","ALL","page","limit","sort","s","review","ASCENDING","length","subscription","observe","subscribe","unsubscribe","map","i","name"],"mappings":"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","sourcesContent":["import { DataStore, Predicates, SortDirection } from \"aws-amplify\";\nimport { useState, useEffect } from \"react\";\nimport { Reviews } from \"../media/models\";\nimport { useRouter } from \"next/router\";\nimport Pagin from \"../components/utils/pagination\";\nimport { Grid } from \"@material-ui/core\";\nimport Backdrop from \"../components/loader/backdrop\";\n\nexport default function FetchReviews() {\n  const router = useRouter();\n  let path = router.asPath;\n  const [reviews, setReviews] = useState([]);\n  const [pageIndex, setPageIndex] = useState(0);\n  const [returned, setReturned] = useState(true);\n\n  useEffect(() => {\n    fetchPosts();\n    async function fetchPosts() {\n      if (path === \"/\") {\n        const reviewsData = await DataStore.query(\n          Reviews,\n          Predicates.ALL,\n          {\n            page: 0,\n            limit: 5,\n          },\n          {\n            sort: (s) => s.review(SortDirection.ASCENDING),\n          }\n        );\n        setReviews(reviewsData);\n      } else {\n        const reviewsData = await DataStore.query(\n          Reviews,\n          Predicates.ALL,\n          {\n            page: pageIndex,\n            limit: 10,\n          },\n          {\n            sort: (s) => s.review(SortDirection.ASCENDING),\n          }\n        );\n        if (reviewsData.length < 1) {\n          setReturned(false);\n        } else {\n          setReviews(reviewsData);\n        }\n      }\n    }\n    const subscription = DataStore.observe(Reviews).subscribe(() =>\n      fetchPosts()\n    );\n    return () => subscription.unsubscribe();\n  }, [pageIndex]);\n\n  return (\n    <>\n      {reviews.length < 1 && returned === true && (\n        <>\n          <Backdrop />\n        </>\n      )}\n\n      {reviews.length < 1 && returned === false && (\n        <>\n          <Custom404Component />\n        </>\n      )}\n      {path === \"/\" && (\n        <>\n          {reviews.map((review, i) => {\n            return (\n              <>\n                {i === 0 || i === 1 ? (\n                  <>\n                    <sl-details summary={`${review.name}`} key={i} open>\n                      <p>{review.review}</p>\n                    </sl-details>\n                    <br />\n                  </>\n                ) : (\n                  <>\n                    <sl-details summary={`${review.name}`} key={i}>\n                      <p>{review.review}</p>\n                    </sl-details>\n                    <br />\n                  </>\n                )}\n              </>\n            );\n          })}\n        </>\n      )}\n\n      {path === \"/reviews\" && (\n        <>\n          {reviews.map((review, i) => {\n            return (\n              <>\n                <sl-details summary={`${review.name}`} key={i} open>\n                  <p>{review.review}</p>\n                </sl-details>\n                <br />\n              </>\n            );\n          })}\n        </>\n      )}\n      {path !== \"/\" && (\n        <Grid item xs={12} md={12}>\n          <Pagin\n            pageCount={3}\n            pageIndex={pageIndex}\n            setPageIndex={setPageIndex}\n          />\n        </Grid>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}